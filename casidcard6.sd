%% 
/*
Date Written: March 05, 2003

Name: casidcard6.sd             G And G  AUTO ID CARD

Copyright (c) 2000, SCIPS.com Inc.

Modify
Date                   By                  Comment
--------------------------------------------------------------
03/4/2008             REL        Converted this to a G AND G  ID Card
===========================
*/

Program
  Name = "casidcard6" ;
  Type = "File" ;
  Domain = "SFPPRINT1";
  Padcharacter = Space ;

  String L_FILE_NAME[13] = "casidcard6.cq" ;
  String L_PRINTER[4];
  String L_STATE[15];
  String L_ALPHA_POLICY_NO = "";
  String L_SFSAGENT_ZIP;
  String L_PREV_STRING;
  String L_TYPE_STR[29];
  String L_TRANS_EFF;
  String L_AUDIT="";
  String L_SYMBOL_STRING[5] = "";
  String L_COMPANY[10] = "";
  String L_SFPNAME_ZIP = "";
  String L_FOB[75];
  String L_LOB_CODE[10];
  string l_enter[1];
  String L_COMPANY_ID[10];
  String L_USER_ID[15];
  String L_SIGNATURE_STRING[55];
  String L_COMPANY_TEL[13];
  String L_COMPANY_ZIP[10];

  Number L_SWITCH_COL_COUNTER = 1;
  Number L_AGENT_CODE_LINE;    --print line of the agent code line
  Number L_INSURED__LINE;      --print line of the insured top line
  Number L_RENEWAL[9];
  Number L_MM_1;
  Number L_DD_1;
  Number L_YY_1;
  Number L_CAL_VERTICAL_POS_1;  --get the starting location of the insured
  Number L_CAL_VERTICAL_POS;    --location on the pol eff date heading line
  Number L_TRANS_CODE;

  Ascii Number L_LENGTH;
  Ascii Number L_WIDTH;
  Ascii Number L_HORZ_LOC;
  Ascii Number L_VERT_LOC;
  Ascii Number L_VERT_LOC2;

  Unsigned Ascii Number L_PRINTER_NO[4]; --the actual printer number
  Unsigned Ascii Number L_LINE_COUNTER = 1;  --line counter per page
  Unsigned Ascii Number L_CAPVEHICLE_STATE[2];
  Unsigned Ascii Number L_CAPVEHICLE_COUNTY[3];
  Unsigned Ascii Number L_LINE_OF_BUSINESS[4];
  Unsigned Ascii Number L_TOTAL_VEHICLE;
  Unsigned Ascii Number L_CURRENT_VEHICLE;
  Unsigned Ascii Number L_NO_VEHICLE[3];
  Unsigned Ascii Number L_COUNTER[3];
  Unsigned Ascii Number L_LOOP;
  Unsigned Ascii Number L_state_var[3];
  Unsigned Ascii Number L_LAST_VEH;
  Unsigned Ascii Number L_LOOP_NUMBER;
  Unsigned Ascii Number L_LOOP_2;
  Unsigned Ascii Number L_LOOP1;
  Unsigned Ascii Number L_LOOP3;
  Unsigned ascii number l_individual_id_card;

  Include "csfonts.inc"
  Include "center2.var"
  Include "sfsrevname.var"

Initialisation
  Deletefile(L_FILE_NAME);
  L_PRINTER            = COMMANDLINE[1,4]
  l_individual_id_card = val(COMMANDLINE[5,5])

Update
  Access SFPNAME,
     Set SFPNAME:POLICY_NO    = SFPPRINT1:POLICY_NO,
         SFPNAME:POL_YEAR     = SFPPRINT1:POL_YEAR,
         SFPNAME:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Exact

  Access SFSCOMPANY,
     Set SFSCOMPANY:COMPANY_ID = SFPNAME:COMPANY_ID , Exact

  Access SFSLINE,
     Set SFSLINE:COMPANY_ID       = SFPNAME:COMPANY_ID ,
         SFSLINE:LINE_OF_BUSINESS = SFPNAME:LINE_OF_BUSINESS, Generic

  Access SFPMASTER,
     Set SFPMASTER:POLICY_NO    = SFPPRINT1:POLICY_NO,
         SFPMASTER:POL_YEAR     = SFPPRINT1:POL_YEAR,
         SFPMASTER:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Exact

  Access CAPVEHICLE,
     Set CAPVEHICLE:POLICY_NO    = SFPPRINT1:POLICY_NO,
         CAPVEHICLE:POL_YEAR     = SFPPRINT1:POL_YEAR,
         CAPVEHICLE:END_SEQUENCE = SFPPRINT1:END_SEQUENCE, Generic

  Access SFSAGENT,
     Set SFSAGENT:COMPANY_ID = SFPNAME:COMPANY_ID,
         SFSAGENT:AGENT_NO   = SFPNAME:AGENT_NO, Exact

  L_LOB_CODE   = SFSLINE:LOB_CODE
  L_COMPANY_ID = SFPNAME:COMPANY_ID

  L_COMPANY     = SFPNAME:COMPANY_ID
  L_COMPANY_TEL = SFSCOMPANY:TELEPHONE[1]

  L_USER_ID    = USERNAME  -- getting current user name
  L_PRINTER_NO = Val(L_PRINTER)   --converting l_printer to the number

  L_CAPVEHICLE_STATE  = CAPVEHICLE:STATE
  L_CAPVEHICLE_COUNTY = CAPVEHICLE:COUNTY

  Access SCIPSCONTROL,
     Set SCIPSCONTROL:COMPANY_ID = L_COMPANY_ID,
         SCIPSCONTROL:STATE      = L_CAPVEHICLE_STATE,
         SCIPSCONTROL:LOB_CODE   = L_LOB_CODE, Exact

  Access SFSSTATE,
     Set SFSSTATE:COMPANY_ID = L_COMPANY_ID,
         SFSSTATE:STATE      = L_CAPVEHICLE_STATE,
         SFSSTATE:COUNTY     = L_CAPVEHICLE_COUNTY, Exact

  Access SFSPRINTER,
     Set SFSPRINTER:COMPANY_ID = L_COMPANY_ID,
         SFSPRINTER:USER_ID    = L_USER_ID,
         SFSPRINTER:PRINTER_NO = L_PRINTER_NO, Exact

  L_RENEWAL = SFPNAME:PREVIOUS_POLICY_NO

  L_PREV_STRING = If (SFPNAME:PREVIOUS_POLICY_NO <> 0) Then
                    Str(SFPNAME:PREVIOUS_POLICY_NO)
                  Else
                    Str(SFPNAME:POLICY_NO)

  L_SFPNAME_ZIP = If (Val(SFPNAME:ZIPCODE_1_4) = 0) Then
                    SFPNAME:ZIPCODE_5_9
                  Else
                    SFPNAME:ZIPCODE_5_9 + "-" + SFPNAME:ZIPCODE_1_4

  L_SFSAGENT_ZIP = If (Val(SFSAGENT:ZIPCODE_1_4) = 0) Then
                    SFSAGENT:ZIPCODE_5_9
                  Else
                    SFSAGENT:ZIPCODE_5_9 + "-" + SFSAGENT:ZIPCODE_1_4

  L_COMPANY_ZIP =  If (Val(SFSCOMPANY:STR_ZIPCODE[6,9]) = 0) Then
                      SFSCOMPANY:STR_ZIPCODE[1,5]
                   Else
                      SFSCOMPANY:STR_ZIPCODE[1,5] + "-" +
                      SFSCOMPANY:STR_ZIPCODE[6,9]

  Switch(SFPMASTER:FORM_OF_BUSINESS)
    Case 'C' : L_FOB = "Corporation"
    Case 'I' : L_FOB = "Individual"
    Case 'J' : L_FOB = "Joint Venture"
    Case 'O' : L_FOB = "Organization"
    Case 'P' : L_FOB = "Partnership"
    Case 'T' : L_FOB = SFPMASTER:FOB_DESCRIPTION
  End

  L_state_var=000

  Access SFSSTATE_ALIAS,
     Set SFSSTATE_ALIAS:COMPANY_ID = L_COMPANY_ID,
         SFSSTATE_ALIAS:STATE      = L_CAPVEHICLE_STATE,
         SFSSTATE_ALIAS:COUNTY     = L_state_var, Exact

  L_STATE = SFSSTATE_ALIAS:DESCRIPTION

--I need to set the tray for the commercial auto ID Card


Writefile(L_FILE_NAME,"%s","<033>%-12345X@PJL <CR><LF>")
--Writefile(L_FILE_NAME,"%s",'@PJL RDYMSG DISPLAY = "QUALITY" <CR><LF>')
Writefile(L_FILE_NAME,"%s","@PJL SET COPIES = 1 <CR><LF>")
--Writefile(L_FILE_NAME,"%s","@PJL SET MANUALFEED=ON <CR><LF>")
--Writefile(L_FILE_NAME,"%s","@PJL SET MPPAPERIN=CONTINUE <CR><LF>")
Writefile(L_FILE_NAME,"%s","@PJL SET MPTRAYSIZE=LETTER <CR><LF>")
Writefile(L_FILE_NAME,"%s","@PJL SET MEDIASOURCE=TRAY2 <CR><LF>")
Writefile(L_FILE_NAME,"%s","@PJL ENTER LANGUAGE = PCL <CR><LF>")


--Writefile(L_FILE_NAME,"%s","<033>E")   --RESET PRINTER
--Writefile(L_FILE_NAME,"%s%n%s","<033>&l",SFSPRINTER:TRAY2[4],"H")  --selects new tray to print from

Writefile(L_FILE_NAME,"%s","<033>&l0E")    --sets the top margin to 0
Writefile(L_FILE_NAME,"%s","<033>&l65F")   --sets the page length to 65 lines

If SCIPSCONTROL:CA_ID_CARD_PRINT_BOTH_SIDES = 1 Then --set duplex printing if both sides need to print
  {
    Writefile(L_FILE_NAME,"%s",L_LEDUP)
  }
Else
  {
    Writefile(L_FILE_NAME,"%s","<033>&l0S")  --simplex mode
  }

-- NEED TO LOOP THOUGH ALL VEHICLES
-- reaccessing the file
if l_individual_id_card = 1 then   --do not print individual id cards
  {
    do print_individual_id_cards    --prints indivicual id cards
  }
else
  {
    do print_id_cards    --prints id cards one at a time.
  }

Writefile(L_FILE_NAME,"%s%n%s","<033>&l",SFSPRINTER:TRAY2[4],"H")

-- Default Paper Tray Selection

Screen Exit
  Writefile(L_FILE_NAME,"%s%s",L_FORMFEED,L_RESET)

--  Writefile(L_FILE_NAME,"%s","<033>E")   --RESET PRINTER
  Writefile(L_FILE_NAME,"%s","<033>%-12345X@PJL <CR><LF>")
--  Writefile(L_FILE_NAME,"%s",'@PJL DEFAULT MPTRAY = CASSETTE <CR><LF>')
  Writefile(L_FILE_NAME,"%s","@PJL RESET <CR><LF>")
  Writefile(L_FILE_NAME,"%s",'@PJL EOJ <CR><LF>')

  Writefile(L_FILE_NAME,"%s","<033>%-12345X")
  Closefile(L_FILE_NAME)

Procedure Definition

procedure print_individual_id_cards

BEGIN
  L_COUNTER = 0
  While CAPVEHICLE:POLICY_NO    = SFPPRINT1:POLICY_NO And
        CAPVEHICLE:POL_YEAR     = SFPPRINT1:POL_YEAR And
        CAPVEHICLE:END_SEQUENCE = SFPPRINT1:END_SEQUENCE
    {
      if capvehicle:print_copies > 0 then
        {
          for l_loop_number = 1 to capvehicle:print_copies
            {  --run loop to the capvehicle:print_copies

              do print_body_of_Id_card
              l_counter = l_counter + 1
              if l_counter mod 2 = 0 then
                {
                  Writefile(L_FILE_NAME,"%s","<FF>")
                  l_counter = 0
                }
            }  --for l_loop
         }  --if statement
     Next CAPVEHICLE
   }
END


procedure print_id_cards

BEGIN

  Access CAPVEHICLE,
     Set CAPVEHICLE:POLICY_NO    = SFPPRINT1:POLICY_NO,
         CAPVEHICLE:POL_YEAR     = SFPPRINT1:POL_YEAR,
         CAPVEHICLE:END_SEQUENCE = SFPPRINT1:END_SEQUENCE,Generic

  L_COUNTER = 0

  While CAPVEHICLE:POLICY_NO    = SFPPRINT1:POLICY_NO And
        CAPVEHICLE:POL_YEAR     = SFPPRINT1:POL_YEAR And
        CAPVEHICLE:END_SEQUENCE = SFPPRINT1:END_SEQUENCE
    {

      do print_body_of_id_card
      l_counter = l_counter + 1
      if l_counter mod 2 = 0 then
        {
          Writefile(L_FILE_NAME,"%s","<FF>")
          l_counter = 0
        }
      Next CAPVEHICLE
    }
}

procedure print_body_of_id_card

BEGIN
  L_CAPVEHICLE_STATE  = CAPVEHICLE:STATE
  L_CAPVEHICLE_COUNTY = CAPVEHICLE:COUNTY
  Access SCIPSCONTROL,
     Set SCIPSCONTROL:COMPANY_ID = L_COMPANY_ID,
         SCIPSCONTROL:STATE      = L_CAPVEHICLE_STATE,
         SCIPSCONTROL:LOB_CODE   = L_LOB_CODE, Exact

  If L_COUNTER Mod 2 = 0 Then
    {
      L_VERT_LOC = 3050
    }
  Else
    {
      L_VERT_LOC = 5520
    }

  Writefile(L_FILE_NAME,"%s",L_ARIAL_BOLD_9)
  Writefile(L_FILE_NAME,"%s","<033>&a720h")
  Writefile(L_FILE_NAME,"%n",L_VERT_LOC)
  Writefile(L_FILE_NAME,"%s","V")
  Writefile(L_FILE_NAME,"Valid %s",trun(SCIPSCONTROL:ID_CARD_PERFORATION_WORDING))
  Writefile(L_FILE_NAME,"%s","<033>&a200h+120V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_6)
  Writefile(L_FILE_NAME,"%s",SCIPSCONTROL:AUTO_CODE)
  Writefile(L_FILE_NAME,"%s","<033>&a1020h+0V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_BOLD_9)
  Writefile(L_FILE_NAME,"State of %s",trun(L_STATE))
  Writefile(L_FILE_NAME,"%s","<033>&a200h+120V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_6)
  Writefile(L_FILE_NAME,"Company No. %s",SCIPSCONTROL:AUTO_COMPANY_CODE)
  Writefile(L_FILE_NAME,"%s","<033>&a1020h+0V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_BOLD_9)
  Writefile(L_FILE_NAME,"%s","Insurance Identification Card")
  Writefile(L_FILE_NAME,"%s","<033>&a1020h+120V")
  Writefile(L_FILE_NAME,"%s",sfscompany:name[1])
  Writefile(L_FILE_NAME,"%s",L_ARIAL_8)
  Writefile(L_FILE_NAME,"%s","<033>&a2860h+120V")
  Writefile(L_FILE_NAME,"%s","Eff. Date")

  Writefile(L_FILE_NAME,"%s","<033>&a200h+120V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_8)
  Writefile(L_FILE_NAME,"%s","Insured Name & Address")

  Writefile(L_FILE_NAME,"%s","<033>&a2840h+0V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_bold_9)
  Writefile(L_FILE_NAME,"%d",SFPNAME:EFF_DATE)


  Writefile(L_FILE_NAME,"%s",L_ARIAL_8)
  Writefile(L_FILE_NAME,"%s","<033>&a2860h+120V")
  Writefile(L_FILE_NAME,"%s",l_push)    --I need to come back to print the Insured Nam and address
  Writefile(L_FILE_NAME,"%s","Exp. Date")
  Writefile(L_FILE_NAME,"%s","<033>&a2840h+120V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_bold_9)
  Writefile(L_FILE_NAME,"%d",SFPNAME:EXP_DATE)
  Writefile(L_FILE_NAME,"%s","<033>&a2860h+120V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_8)
  Writefile(L_FILE_NAME,"%s","Policy No.")
  Writefile(L_FILE_NAME,"%s","<033>&a2800h+120V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_bold_9)
  Writefile(L_FILE_NAME,"%s",Trun(SFSLINE:ALPHA))
  Writefile(L_FILE_NAME,"%n",SFPPRINT1:POLICY_NO)
  Writefile(L_FILE_NAME,"%s",l_pop)    --now I am going to print the Insured address
  Writefile(L_FILE_NAME,"%s",L_ARIAL_bold_9)
  For L_LOOP = 1 To 2
    {
      If (SFPNAME:NAME[L_LOOP] <> "") Then
        {
          I_NAME = SFPNAME:NAME[L_LOOP]
          Include "sfsrevname7.pro"
          Writefile(L_FILE_NAME,"%s","<033>&a200h+0V")
          Writefile(L_FILE_NAME,"%s",Trun(I_REV_NAME))
          Writefile(L_FILE_NAME,"%s","<033>&a200h+100V")

          L_LINE_COUNTER = L_LINE_COUNTER + 0.83
        }
    }

  For L_LOOP = 1 To 1
    {
      If SFPNAME:ADDRESS[L_LOOP] <> "" Then
        {
          Writefile(L_FILE_NAME,"%s","<033>&a200h+0V")
          Writefile(L_FILE_NAME,"%s",SFPNAME:ADDRESS[L_LOOP])
--          Writefile(L_FILE_NAME,"%s","<NL>")
          Writefile(L_FILE_NAME,"%s","<033>&a200h+100V")
          L_LINE_COUNTER = L_LINE_COUNTER + 0.83
        }
    }
  Writefile(L_FILE_NAME,"%s","<033>&a200h+0V")
  Writefile(L_FILE_NAME,"%s",Trun(SFPNAME:CITY))
  Writefile(L_FILE_NAME,"%s",", ")
  Writefile(L_FILE_NAME,"%s",SFPNAME:STR_STATE)
  Writefile(L_FILE_NAME,"%s","  ")
  Writefile(L_FILE_NAME,"%s",L_SFPNAME_ZIP)
  Writefile(L_FILE_NAME,"%s",L_ARIAL_8)
  Writefile(L_FILE_NAME,"%s","<033>&a200h+120V")
  Writefile(L_FILE_NAME,"%s","Issuing Producer Name and Address")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_bold_9)
  Writefile(L_FILE_NAME,"%s","<033>&a200h+120V")
  For L_LOOP = 1 To 1
    {
      If SFSAGENT:NAME[L_LOOP] <> "" Then
        {
          Writefile(L_FILE_NAME,"%s","<033>&a200h-0V")
          Writefile(L_FILE_NAME,"%s",SFSAGENT:NAME[L_LOOP])
          Writefile(L_FILE_NAME,"%s","<033>&a200h+100V")
          L_LINE_COUNTER = L_LINE_COUNTER + 0.83
        }
    }
  For L_LOOP = 1 To 3
    {
      If SFSAGENT:ADDRESS[L_LOOP] <> "" Then
        {
          Writefile(L_FILE_NAME,"%s","<033>&a200h-0V")
          Writefile(L_FILE_NAME,"%s",SFSAGENT:ADDRESS[L_LOOP])
          Writefile(L_FILE_NAME,"%s","<033>&a200h+100V")
          L_LINE_COUNTER = L_LINE_COUNTER + 0.83
        }
    }

  Writefile(L_FILE_NAME,"%s","<033>&a200h+0V")
  Writefile(L_FILE_NAME,"%s",Trun(SFSAGENT:CITY))
  Writefile(L_FILE_NAME,"%s",", ")
  Writefile(L_FILE_NAME,"%s",SFSAGENT:STR_STATE)
  Writefile(L_FILE_NAME,"%s","  ")
  writefile(L_FILE_NAME,"%s",L_SFSAGENT_ZIP)

  Writefile(L_FILE_NAME,"%s","<033>&a200h+120V")
  Writefile(L_FILE_NAME,"%n",CAPVEHICLE:YEAR)
  Writefile(L_FILE_NAME,"%s","<033>&a720h-0V")
  Writefile(L_FILE_NAME,"%s",trun(CAPVEHICLE:MAKE))
  Writefile(L_FILE_NAME,"%s","<033>&a1800h-0V")
  Writefile(L_FILE_NAME,"%s",CAPVEHICLE:MODEL)
  Writefile(L_FILE_NAME,"%s","<033>&a2350h+0V")
  Writefile(L_FILE_NAME,"%s",CAPVEHICLE:SERIAL_NO)

  Writefile(L_FILE_NAME,"%s",L_ARIAL_9)
  Writefile(L_FILE_NAME,"%s","<033>&a200h+100V")
  Writefile(L_FILE_NAME,"%s","YEAR")
  Writefile(L_FILE_NAME,"%s","<033>&a760h+0V")
  Writefile(L_FILE_NAME,"%s","MAKE")
  Writefile(L_FILE_NAME,"%s","<033>&a1800h+0V")
  Writefile(L_FILE_NAME,"%s","MODEL")
  Writefile(L_FILE_NAME,"%s","<033>&a2450h+0V")
  Writefile(L_FILE_NAME,"%s","VIN")
  Writefile(L_FILE_NAME,"%s","<033>&a200h+285V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_BOLD_7)
  writefile(L_FILE_NAME,"%s","SEE IMPORTANT MESSAGE ON REVERSE SIDE")
  Writefile(L_FILE_NAME,"%s","<033>&a300h+100V")


  If (SCIPSCONTROL:SIGNATURE = 1) Then
    {
      --the next line of code will be used to a signature
      L_SIGNATURE_STRING = "<033>" + Trun(SCIPSCONTROL:SIGNATURE_SYMBOL_SET) +
                           "<033>" + Trun(SCIPSCONTROL:SIGNATURE_DEFINITION)
      Writefile(L_FILE_NAME,"%s","<033>&a")
      Writefile(L_FILE_NAME,"%n",SCIPSCONTROL:SIGNATURE_HOZ_POS - 600)
      Writefile(L_FILE_NAME,"%s","h")
      Writefile(L_FILE_NAME,"%S",scipscontrol:signature_vert_pos)
      Writefile(L_FILE_NAME,"%s","V")
      Writefile(L_FILE_NAME,"%s",trun(L_SIGNATURE_STRING))
      Writefile(L_FILE_NAME,"%s",Trun(SCIPSCONTROL:SIGNATURE_STRING_TO_PRINT))
      Writefile(L_FILE_NAME,"%s","<033>&a+0h+20V")
    }
  Writefile(L_FILE_NAME,"%s",L_ARIAL_BOLD_8)
  Writefile(L_FILE_NAME,"%s","<033>&a2160h+0V<033>*c1400h5v0P")
  Writefile(L_FILE_NAME,"%s","<033>&a2160h+60V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_8)
  Writefile(L_FILE_NAME,"%s","Authorized Representative")
  Writefile(L_FILE_NAME,"%s","<033>&a2670h+60V")
  Writefile(L_FILE_NAME,"%s",L_ARIAL_8)
  Writefile(L_FILE_NAME,"%s","SICA SA002 (01/01)")
END

End
