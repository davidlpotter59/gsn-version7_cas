%%
Program
        Name = "CASPR400" ;
        Type = "File" ;
        Padcharacter = Space ;
        Domain = "SFPPRINT" ;

      Global string g_process_policy_mgt_agent_copy[1] = "Y";   --makes sure agent copy does not go to policy mangement system
      Global Unsigned Ascii Number G_POLICY_NO[9] ,
                                   G_YEAR[4] ,
                                   G_END_SEQUENCE[4] ;

      array [120] of string l_no_duplicate_printing[7];

      Global String G_QUE[10] ;
      Global procedure policy_management_update(number,number,number,string,number,number,string,string,string); --"policy_management_lib".policy_management_update
      Global string function get_transaction_type(number)
      Global string function Get_converted_status(number,number)

      Local String L_MACRO[15]="" ,
                   L_REPORT[15]="",
                   L_COMPANY_ID[10]="",
                   L_DESCRIPTION[75]="" ,
                   L_FORM_EDITION[25]="" ,
                   L_CSEXEC_NUMBER[12]="",
                   l_agent_copy_dec[25]="",
                   L_CODE[7]="" ,
                   L_MCA202[1]="N",
                   l_mca322[1]="N",
                   L_MCA822[1]="N",
                   l_mca825[1]="N",
                   l_mca104[1]="N",
                   L_MCA301[1]="N",
                   l_be23[1]="N",
                   L_MAILER[1]="N" ,
                   L_PARAMETER[20]="" ,
                   L_COPY_NAME[20] ,
                   L_APP[3]="sfs" ,
                   L_DEC[15]="" ,
                   L_FORM_PRINT[15],
                   L_EDITION_PRINT[10],
                   L_PRINT_SUPP[1],
                   L_LOB_CODE[10]="AUTO      ",
                   L_HIT_CODE[1]="Y",
                   L_use_batch_macro,
                   l_enter[1],
                   l_extend_hired_nonowned,
                   l_delete_hired_nonowned,
                   l_end_lob_code,
                   L_HOLD_CODE[7]="" ;

      Local Unsigned Ascii Number L_STATE[2],
                                  L_LINE_OF_BUSINESS[4],
                                  L_POLICY_NO[9]=1 ,
                                  L_SUB_CODE[4] ,
                                  l_end_sequence[4],
                                  L_PRINTER[4] ,
                                  L_FORM[1]=0,
                                  L_PRINT[1]=0,
                                  L_PREM_NO[4]=0,
                                  L_loop[4]=0,
                                  L_BUILD_NO[4]=0,
                                  L_PREMIUM[6]=0,
                                  L_NO_COPIES[4]=0,
                                  L_COPIES[4]=0 ,
                                  L_COPIES_PRINTED[3]=0 ,
                                  l_print_pcl[1];

      Include "csexec.var"
      Include "swsut100.var"

      Include "STDKEYS.INC"

Initialisation

L_PRINTER = Val(COMMANDLINE[1,4])
L_CSEXEC_NUMBER = COMMANDLINE[5,17]
Do BEGIN_PROCESSING

Update

Errors
Writefile("caspr400.err","%n",ERRORNUMBER)
Writefile("caspr400.err","%s",ERRORTEXT)
Closefile("caspr400.err")

Procedure Definition

Procedure BEGIN_PROCESSING

Begin
L_POLICY_NO = 0
Access SFPPRINT1,
   Set SFPPRINT1:POLICY_NO = L_POLICY_NO, Approximate

G_POLICY_NO    = SFPPRINT1:POLICY_NO
G_YEAR         = SFPPRINT1:POL_YEAR
G_END_SEQUENCE = SFPPRINT1:END_SEQUENCE
L_COPY_NAME    = SFPPRINT1:COPY_NAME

Access SFPNAME,
   Set SFPNAME:POLICY_NO = G_POLICY_NO,
       SFPNAME:POL_YEAR = G_YEAR,
       SFPNAME:END_SEQUENCE = G_END_SEQUENCE, Generic

L_MAILER = "N"

/* get number of copies that should be printed by line of business */

Do GET_CAS_COPIES

/* set macro and parameter file using csexec to keep it unique so we dont get
   errors trying to create this file */

L_PARAMETER = "sfpdecssfp.par"
L_DEC = L_APP+Trun(L_CSEXEC_NUMBER)+".cq"
L_MACRO = L_APP+Trun(L_CSEXEC_NUMBER)+".mf"

/* create the macro */

Do GET_MACRO

/* end of begin_process */
End

Procedure GET_CAS_COPIES

Begin
L_SUB_CODE = 0
Access SFPMASTER,
   Set SFPMASTER:POLICY_NO = G_POLICY_NO,
       SFPMASTER:POL_YEAR = G_YEAR,
       SFPMASTER:END_SEQUENCE = G_END_SEQUENCE, Exact

l_end_sequence     = 0

access sfpmaster_alias,
   set sfpmaster_alias:policy_no = g_policy_no,
       sfpmaster_alias:pol_year = g_year,
       sfpmaster_alias:end_sequence = l_end_sequence, generic

Access SCIPSCONTROL,
   Set SCIPSCONTROL:COMPANY_ID = L_COMPANY_ID,
       SCIPSCONTROL:STATE      = L_STATE,
       SCIPSCONTROL:LOB_CODE   = L_LOB_CODE, Generic

Access CAPVEHICLE,
   Set CAPVEHICLE:POLICY_NO = G_POLICY_NO,
       CAPVEHICLE:POL_YEAR = G_YEAR,
       CAPVEHICLE:END_SEQUENCE = G_END_SEQUENCE, Generic

Access CASDEFAULT,
   Set CASDEFAULT:COMPANY_ID = L_COMPANY_ID,
       CASDEFAULT:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

L_STATE            = CAPVEHICLE:STATE
L_COMPANY_ID       = SFPNAME:COMPANY_ID
L_LINE_OF_BUSINESS = SFPNAME:LINE_OF_BUSINESS
L_FORM             = 0

Access SFSEND,
   Set SFSEND:COMPANY_ID       = L_COMPANY_ID,
       SFSEND:STATE            = L_STATE ,
       SFSEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
       SFSEND:FORM             = L_FORM, Generic

 While SFSEND:COMPANY_ID       = L_COMPANY_ID and
       SFSEND:STATE            = L_STATE and
       SFSEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS and
       SFSEND:FORM             = L_FORM
  Begin
/* update sfpprint2 with the mandatory endorsements that should print on the
   common dec page */

    If (SFPNAME:EFF_DATE >= SFSEND:EFF_DATE And
       (SFPNAME:EFF_DATE <= SFSEND:EXP_DATE Or
       SFSEND:EXP_DATE = 0)) Then
        Begin
        If SFSEND:RENEWAL = 1 And
           SFPMASTER_ALIAS:TRANS_CODE = 14 Then
            Begin
            If ((SFPNAME:EFF_DATE <= SFSEND:EXP_DATE Or
               SFSEND:EXP_DATE = 0) And
               SFPNAME:EFF_DATE >= SFSEND:RENEWAL_EFF_DATE and
               (sfpname:eff_date <= sfsend:renewal_exp_date or
               sfsend:renewal_exp_date = 0)) Then
                Begin
                Do SUBCODE
                L_CODE = SFSEND:CODE
                L_FORM_EDITION = SFSEND:FORM_EDITION
                L_DESCRIPTION = SFSEND:DESCRIPTION
                Do ADD_SFPPRINT2
                End
            End
        Else
            If SFSEND:NEW = 1 And
               SFPMASTER_ALIAS:TRANS_CODE = 10 Then
                Begin
                If ((SFPNAME:EFF_DATE <= SFSEND:EXP_DATE Or
                   SFSEND:EXP_DATE = 0) And
                   SFPNAME:EFF_DATE >= SFSEND:NEW_EFF_DATE and
                   (sfpname:eff_date <= sfsend:new_exp_date or
                   sfsend:new_exp_date = 0)) Then
                    Begin
                    Do SUBCODE
                    L_CODE = SFSEND:CODE
                    L_FORM_EDITION = SFSEND:FORM_EDITION
                    L_DESCRIPTION = SFSEND:DESCRIPTION
                    Do ADD_SFPPRINT2
                    End
                End
            Else
            if sfsend:new = 0 and
               sfsend:renewal = 0 then
                Begin
                Do SUBCODE
                L_CODE = SFSEND:CODE
                L_FORM_EDITION = SFSEND:FORM_EDITION
                L_DESCRIPTION = SFSEND:DESCRIPTION
                Do ADD_SFPPRINT2
                End

        End      ---end of if sfpname
    Next SFSEND
  End--end of sfsend

Access SFPEND1,
   Set SFPEND1:POLICY_NO = G_POLICY_NO,
       SFPEND1:POL_YEAR = G_YEAR,
       SFPEND1:END_SEQUENCE = G_END_SEQUENCE, Generic

Repeat Begin
    Exit If SFPEND1:POLICY_NO <> G_POLICY_NO Or
            SFPEND1:POL_YEAR <> G_YEAR Or
            SFPEND1:END_SEQUENCE <> G_END_SEQUENCE

        L_CODE         = SFPEND1:CODE
        L_PREM_NO      = SFPEND1:VEHICLE_NO
        L_BUILD_NO     = 0
        L_FORM_EDITION = SFPEND1:FORM_EDITION
        L_DESCRIPTION  = SFPEND1:DESCRIPTION
        Do ADD_SFPPRINT3

    Next SFPEND1
    End

/* end of get_cas_copies */
End

Procedure ADD_SFPPRINT2
Begin

Add SFPPRINT2
    Begin
    SFPPRINT2:POLICY_NO        = G_POLICY_NO
    SFPPRINT2:POL_YEAR         = G_YEAR
    SFPPRINT2:END_SEQUENCE     = G_END_SEQUENCE
    SFPPRINT2:SUB_CODE         = L_SUB_CODE
    SFPPRINT2:FORM_EDITION     = L_FORM_EDITION
    SFPPRINT2:DESCRIPTION      = L_DESCRIPTION
--    sfpprint2:line_of_business = capvehicle:line_of_business
    End

-- End of add_sfpprint2
End

Procedure ADD_SFPPRINT3
Begin
Access SFPPRINT3,
   Set SFPPRINT3:POLICY_NO    = G_POLICY_NO,
       SFPPRINT3:POL_YEAR     = G_YEAR,
       SFPPRINT3:END_SEQUENCE = G_END_SEQUENCE,
       SFPPRINT3:PREM_NO      = L_PREM_NO,
       SFPPRINT3:BUILD_NO     = L_BUILD_NO,
       SFPPRINT3:CODE         = L_CODE, Generic

If SFPPRINT3:POLICY_NO    <> G_POLICY_NO Or
   SFPPRINT3:POL_YEAR     <> G_YEAR Or
   SFPPRINT3:END_SEQUENCE <> G_END_SEQUENCE Or
   SFPPRINT3:PREM_NO      <> L_PREM_NO Or
   SFPPRINT3:BUILD_NO     <> L_BUILD_NO Or
   SFPPRINT3:CODE         <> L_CODE Then
    Add SFPPRINT3
        Begin
        SFPPRINT3:POLICY_NO    = G_POLICY_NO
        SFPPRINT3:POL_YEAR     = G_YEAR
        SFPPRINT3:END_SEQUENCE = G_END_SEQUENCE
        SFPPRINT3:PREM_NO      = L_PREM_NO
        SFPPRINT3:BUILD_NO     = L_BUILD_NO
        SFPPRINT3:CODE         = L_CODE
        SFPPRINT3:FORM_EDITION = L_FORM_EDITION
        SFPPRINT3:DESCRIPTION  = L_DESCRIPTION
        SFPPRINT3:PRINT_FORM   = "Y"

        L_HOLD_CODE = SFPPRINT3:CODE
        L_HIT_CODE = "N"

        Do CHECK_FOR_DUP_CODE

        If L_HIT_CODE = "Y" Then
            Begin
            SFPPRINT3:PRINT_FORM = "N"
            End
        Else
            Begin
            SFPPRINT3:PRINT_FORM = "Y"
            End
        End

-- End of add_sfpprint3
End

Procedure CHECK_FOR_DUP_CODE
Begin
Access SFPPRINT3_FORM,
   Set SFPPRINT3_FORM:POLICY_NO    = G_POLICY_NO,
       SFPPRINT3_FORM:POL_YEAR     = G_YEAR,
       SFPPRINT3_FORM:END_SEQUENCE = G_END_SEQUENCE, Approximate

--L_HIT_CODE = "N"
While SFPPRINT3_FORM:POLICY_NO    = G_POLICY_NO And
      SFPPRINT3_FORM:POL_YEAR     = G_YEAR And
      SFPPRINT3_FORM:END_SEQUENCE = G_END_SEQUENCE
        Begin
        If SFPPRINT3_FORM:CODE = L_HOLD_CODE Then
            Begin
            L_HIT_CODE = "Y"
            End

        Next SFPPRINT3_FORM
        End

End

Procedure SUBCODE
Begin
/* get sub code to update sfpprint2 to keep key unique */

Access SFPPRINT2_ALIAS,
   Set SFPPRINT2_ALIAS:POLICY_NO    = G_POLICY_NO,
       SFPPRINT2_ALIAS:POL_YEAR     = G_YEAR,
       SFPPRINT2_ALIAS:END_SEQUENCE = G_END_SEQUENCE, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If SFPPRINT2_ALIAS:POLICY_NO    <> G_POLICY_NO Or
            SFPPRINT2_ALIAS:POL_YEAR     <> G_YEAR Or
            SFPPRINT2_ALIAS:END_SEQUENCE <> G_END_SEQUENCE

        L_SUB_CODE = SFPPRINT2_ALIAS:SUB_CODE

    Next SFPPRINT2_ALIAS
    End

L_SUB_CODE = L_SUB_CODE + 10

/* end of subcode */
End

Procedure GET_MACRO
Begin
Switch(L_COPY_NAME)
  Case "Original    " : L_COPIES_PRINTED = 1
  Case "Agent's Copy" : L_COPIES_PRINTED = 2
  Case "Home Office " : L_COPIES_PRINTED = 3
  Default             : L_COPIES_PRINTED = 4
  End

--If L_COPY_NAME = "ORIGINAL" Then
--   L_COPIES_PRINTED = 1

/* need l_copy_name and l_proxy_date for printing of reports each report needs
   this to accept the parameter file */

    L_PARAMETER = "sfpdecssfp.par"
    Deletefile(L_PARAMETER)
    Writefile (L_PARAMETER,"%S",L_COPY_NAME)
    Writefile (L_PARAMETER,"<NL>")
    Closefile(L_PARAMETER)

Access SCIPSCONTROL,
   Set SCIPSCONTROL:COMPANY_ID = L_COMPANY_ID,
       SCIPSCONTROL:STATE      = L_STATE,
       SCIPSCONTROL:LOB_CODE   = L_LOB_CODE, Generic

Access sfsline,
   Set sfsline:company_id = l_company_id,
       sfsline:line_of_business = l_line_of_business,
       sfsline:lob_subline = "00", exact

If sfsline:lob_code = "AUTO" then
  Begin
    L_USE_BATCH_MACRO = "N"
    If SCIPSCONTROL:USE_BATCH_FOR_ENDORSEMENTS = 1 Then
      {
        L_USE_BATCH_MACRO = "Y"
      }
    Else
      {
        L_USE_BATCH_MACRO = "N"
      }

    If SCIPSCONTROL:USE_NEW_PRINT_PROGRAM = 1 Then
      {
        Include "caspr302.inc" -- print commercial auto dec pages
      }
    else
      {
        Include "caspr301.inc" -- print commercial auto dec pages
      }
  End

/* end of get_macro */
End

Procedure ENDORSEMENT_PRINT1
Begin
If l_print = 1 then
  Begin
  If L_PRINT_PCL = 1 and
     l_copies_printed = 1 Then
    {
      Writefile(L_MACRO,"cli joinit %s%s.pcl %s<nl>",trun(scipscontrol:STATIC_FORM_DIR_LOCATION),Trun(L_REPORT),Trun(L_DEC))
    }
  else
    {
      If l_print = 1 and
         l_print_pcl = 0 then
        {
          If L_USE_BATCH_MACRO = "Y" Then
            Begin
              Include "sfsmacro1.inc"
            End
          Else
            Begin
              Include "sfsmacro.inc"
            End
        }
    }
  end
End

procedure add_and_check_print_array

BEGIN
  l_loop = 1
  while l_no_duplicate_printing[l_loop] <> l_code and
        l_no_duplicate_printing[l_loop] <> "" and
        l_loop < 120   --prevents out of arrary out off bounds
          {
            L_loop = l_loop + 1
          }
 --found position of where to put the next form in the loop

  if l_no_duplicate_printing[l_loop] <> l_code then
    {
      l_no_duplicate_printing[l_loop] = l_code
      If L_PRINT = 1 Then
        Begin
          do endorsement_print1
        End
    }
END

Procedure ACCESS_SFSOPTEND
Begin
  Access SFSOPTEND,
     Set SFSOPTEND:COMPANY_ID       = L_COMPANY_ID,
         SFSOPTEND:STATE            = L_STATE,
         SFSOPTEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
         SFSOPTEND:CODE             = L_CODE, generic

   While SFSOPTEND:COMPANY_ID       = L_COMPANY_ID and
         SFSOPTEND:STATE            = L_STATE and
         SFSOPTEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS and
         SFSOPTEND:CODE             = L_CODE
    Begin
      If (SFPNAME:EFF_DATE >= SFSOPTEND:EFF_DATE and
         (sfpname:eff_date <= sfsoptend:exp_date or
          sfsoptend:exp_date = 0)) Then
        Begin
          L_PRINT         = SFSOPTEND:PRINT_FORM
          L_FORM_EDITION  = SFSOPTEND:FORM_EDITION
          L_FORM_PRINT    = SFSOPTEND:FORM_PRINT
          L_EDITION_PRINT = SFSOPTEND:EDITION_PRINT
          L_REPORT        = SFSOPTEND:FORM_FILE_NAME
        End
      Next SFSOPTEND
    End
  Deletefile(L_PARAMETER)
  Writefile (L_PARAMETER,"%s",L_COPY_NAME)
  Writefile (L_PARAMETER,"<NL>")
  Writefile (L_PARAMETER,"%s",L_FORM_PRINT)
  Writefile (L_PARAMETER,"<NL>")
  Writefile (L_PARAMETER,"%s",L_EDITION_PRINT)
  Writefile (L_PARAMETER,"<NL>")
  Writefile (L_PARAMETER,"%n",L_PREMium)
  Writefile (L_PARAMETER,"<NL>")
  Closefile (L_PARAMETER)
End

Procedure access_sfsoptend1
Begin
  Access SFSOPTEND1,
     Set SFSOPTEND1:COMPANY_ID       = l_COMPANY_ID,
         SFSOPTEND1:STATE            = l_STATE,
         SFSOPTEND1:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
         SFSOPTEND1:CODE             = l_CODE, generic

 l_print_pcl = 0
   While SFSOPTEND1:COMPANY_ID       = l_COMPANY_ID and
         SFSOPTEND1:STATE            = l_STATE and
         SFSOPTEND1:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS and
         SFSOPTEND1:CODE             = l_CODE
     {
       If (sfpname:EFF_DATE >= SFSOPTEND1:REFF_DATE and
          (sfpname:eff_date <= sfsoptend1:rexp_date or
                               sfsoptend1:rexp_date = 0)) Then
         Begin
           l_print_pcl = sfsoptend1:pcl_doc_was_converted
         end
       Next SFSOPTEND1
     }
End


/* end of file */
End
